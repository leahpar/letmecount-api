
@apiUrl = http://localhost:8888

### Login
POST {{apiUrl}}/auth
Content-Type: application/ld+json
Accept: application/ld+json

{
    "username": "raphael",
    "password": "test"
}
> {%
    client.global.set("token", `${response.body.token}`)
    client.global.set("refresh_token", `${response.body.refresh_token}`)
%}

### Refresh Token
POST {{apiUrl}}/auth/refresh
Content-Type: application/ld+json
Accept: application/ld+json

{
    "refresh_token": "{{refresh_token}}"
}
> {%
    client.global.set("token", `${response.body.token}`)
    client.global.set("refresh_token", `${response.body.refresh_token}`)
%}

### Logout
POST {{apiUrl}}/auth/logout
Content-Type: application/ld+json
Authorization: Bearer {{token}}

{
    "refresh_token": "{{refresh_token}}"
}

### test
GET {{apiUrl}}/test/
Authorization: Bearer {{token}}

### Créer une dépense
POST {{apiUrl}}/depenses
Content-Type: application/ld+json
Accept: application/ld+json
Authorization: Bearer {{token}}

{
    "date": "2024-01-16T00:00:00+00:00",
    "montant": 30.00,
    "titre": "Restaurant",
    "tag": "/tags/1",
    "partage": "parts",
    "payePar": "/users/2",
    "details": [
        {
            "user": "/users/1",
            "parts": 1,
            "montant": 15.00
        },
        {
            "user": "/users/2",
            "parts": 1,
            "montant": 15.00
        }
    ]
}

### Modifier une dépense
PUT {{apiUrl}}/depenses/1
Content-Type: application/ld+json
Authorization: Bearer {{token}}

{
    "date": "2024-01-16T00:00:00+00:00",
    "montant": 60.00,
    "titre": "Restaurant modifié",
    "tag": "/tags/1",
    "partage": "montants",
    "payePar": "/users/1",
    "details": [
        {
            "user": "/users/1",
            "parts": 1,
            "montant": 30.00
        },
        {
            "user": "/users/2",
            "parts": 1,
            "montant": 30.00
        }
    ]
}

### Supprimer une dépense
DELETE {{apiUrl}}/depenses/1
Authorization: Bearer {{token}}

### Lister les utilisateurs
GET {{apiUrl}}/users
Authorization: Bearer {{token}}

### Lister les utilisateurs avec recherche
GET {{apiUrl}}/users?username=test
Authorization: Bearer {{token}}

### Récupérer l'utilisateur courant
GET {{apiUrl}}/users/me
Authorization: Bearer {{token}}

### Récupérer un utilisateur spécifique
GET {{apiUrl}}/users/1
Authorization: Bearer {{token}}

### Ajouter un utilisateur
POST {{apiUrl}}/users
Content-Type: application/ld+json
Accept: application/ld+json
Authorization: Bearer {{token}}

{
    "username": "newuser"
}


### Lister toutes les dépenses (filtrage automatique par utilisateur connecté)
GET {{apiUrl}}/depenses
Authorization: Bearer {{token}}

### Récupérer une dépense spécifique
GET {{apiUrl}}/depenses/1
Authorization: Bearer {{token}}

### === TAGS ===

### Créer un tag
POST {{apiUrl}}/tags
Content-Type: application/ld+json
Accept: application/ld+json
Authorization: Bearer {{token}}

{
    "libelle": "Les filles"
}

### Lister tous les tags
GET {{apiUrl}}/tags
Authorization: Bearer {{token}}

### Récupérer un tag spécifique
GET {{apiUrl}}/tags/2
Authorization: Bearer {{token}}

### Modifier un tag
PATCH {{apiUrl}}/tags/1
Content-Type: application/merge-patch+json
Authorization: Bearer {{token}}

{
    "libelle": "La soirée filles"
}

### Supprimer un tag
DELETE {{apiUrl}}/tags/1
Authorization: Bearer {{token}}

### Filtrer les dépenses par tag
GET {{apiUrl}}/depenses?tag=1
Authorization: Bearer {{token}}

### Ajouter un user à un tag
PATCH {{apiUrl}}/tags/1
Content-Type: application/merge-patch+json
Authorization: Bearer {{token}}

{
    "users": [
        "/users/1"
    ]
}
